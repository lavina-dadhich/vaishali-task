{"ast":null,"code":"var _jsxFileName = \"/Users/arit-macmini/Documents/LavinaVyas/Archive/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardImg, CardTitle, CardSubtitle, CardBody, Col, Row, Input } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { apiActions } from \"./redux/api/reducer\";\nimport { connect } from \"react-redux\";\nimport Slider, { Range } from \"rc-slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  data,\n  getApiData\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [valueLeft, setValueLeft] = useState(\"0\");\n  const [valueRight, setValueRight] = useState(\"0\");\n  const [searchMovies, setsearchMovies] = useState(data.Search);\n  useEffect(() => {\n    getApiData();\n  }, []);\n\n  const onSliderChange = value => {\n    let movies = data.Search.filter(movie => {\n      var m = movie.Year;\n      return m >= valueLeft && m <= valueRight;\n    });\n    setsearchMovies(movies);\n    setValueLeft(value[0]);\n    setValueRight(value[1]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: \"4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"m-4\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"searchKeyword\",\n            id: \"searchKeyword\",\n            placeholder: \"Search\",\n            className: \"rounded-pill bg-transparent\",\n            onChange: event => {\n              setSearchTerm(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [valueLeft, \" -- \", valueRight]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Range, {\n            min: 1950,\n            max: 2021,\n            onChange: onSliderChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      sm: \"8\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: searchMovies.filter(val => {\n          if (searchTerm === \"\") {\n            return val;\n          } else if (val.Title.toLowerCase().includes(searchTerm.toLowerCase()) || val.Year.toLowerCase().includes(searchTerm.toLowerCase())) {\n            if (Object.keys(searchMovies.indexOf(\"searchTerm\")) > -1) {\n              return val;\n            }\n          }\n        }).map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"m-2\",\n              children: [/*#__PURE__*/_jsxDEV(CardImg, {\n                top: true,\n                width: \"100%\",\n                height: \"210vw\",\n                src: item.Poster,\n                alt: \"Card image cap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  tag: \"h5\",\n                  children: item.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                  tag: \"h6\",\n                  className: \"mb-2 text-muted\",\n                  children: [\"Released On:- \", item.Year]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dOU18XxhpfJCHgFnVK0qNgHwOAo=\");\n\n_c = App;\n\nconst mapStateToProps = ({\n  reducerApi\n}) => {\n  const {\n    data,\n    isLoading,\n    error\n  } = reducerApi;\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({ ...bindActionCreators({ ...apiActions.Creators\n  }, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/arit-macmini/Documents/LavinaVyas/Archive/src/App.js"],"names":["React","useEffect","useState","Card","CardImg","CardTitle","CardSubtitle","CardBody","Col","Row","Input","bindActionCreators","apiActions","connect","Slider","Range","App","data","getApiData","searchTerm","setSearchTerm","valueLeft","setValueLeft","valueRight","setValueRight","searchMovies","setsearchMovies","Search","onSliderChange","value","movies","filter","movie","m","Year","event","target","val","Title","toLowerCase","includes","Object","keys","indexOf","map","item","key","Poster","mapStateToProps","reducerApi","isLoading","error","mapDispatchToProps","dispatch","Creators"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardTitle,\n  CardSubtitle,\n  CardBody,\n  Col,\n  Row,\n  Input,\n} from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { apiActions } from \"./redux/api/reducer\";\nimport { connect } from \"react-redux\";\nimport Slider, { Range } from \"rc-slider\";\n\nconst App = ({ data, getApiData }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [valueLeft, setValueLeft] = useState(\"0\");\n  const [valueRight, setValueRight] = useState(\"0\");\n  const [searchMovies, setsearchMovies] = useState(data.Search);\n\n  useEffect(() => {\n    getApiData();\n  }, []);\n\n  const onSliderChange = value => {\n    let movies = data.Search.filter(movie => {\n      var m = movie.Year;\n      return m >= valueLeft && m <= valueRight;\n    });\n    setsearchMovies(movies);\n    setValueLeft(value[0]);\n    setValueRight(value[1]);\n  };\n\n  return (\n    <Row>\n      <Col sm=\"4\">\n        <Card className=\"m-4\">\n          <CardBody>\n            <Input\n              name=\"searchKeyword\"\n              id=\"searchKeyword\"\n              placeholder=\"Search\"\n              className=\"rounded-pill bg-transparent\"\n              onChange={event => {\n                setSearchTerm(event.target.value);\n              }}\n            />\n            <br />\n            <p>\n              {valueLeft} -- {valueRight}\n            </p>\n            <Range min={1950} max={2021} onChange={onSliderChange} />\n          </CardBody>\n        </Card>\n      </Col>\n      <Col sm=\"8\">\n        <Row>\n          {searchMovies\n            .filter(val => {\n              if (searchTerm === \"\") {\n                return val;\n              } else if (\n                val.Title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                val.Year.toLowerCase().includes(searchTerm.toLowerCase())\n              ) {\n                if (Object.keys(searchMovies.indexOf(\"searchTerm\")) > -1) {\n                  return val;\n                }\n              }\n            })\n            .map((item,key) => {\n              return (\n                <Col sm=\"4\" key={key}>\n                  <Card className=\"m-2\">\n                    <CardImg\n                      top\n                      width=\"100%\"\n                      height= \"210vw\"\n                      src={item.Poster}\n                      alt=\"Card image cap\"\n                    />\n                    <CardBody>\n                      <CardTitle tag=\"h5\">{item.Title}</CardTitle>\n                      <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                        Released On:- {item.Year}\n                      </CardSubtitle>\n                    </CardBody>\n                  </Card>\n                </Col>\n              );\n            })}\n        </Row>\n      </Col>\n    </Row>\n  );\n};\nconst mapStateToProps = ({ reducerApi }) => {\n  const { data, isLoading, error } = reducerApi;\n  return { data, isLoading, error };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators({ ...apiActions.Creators }, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}