{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport sagas from \"./sagas\";\nconst persistConfig = {\n  key: \"vaisha\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nconst configureStore = initialState => {\n  const store = createStore(persistedReducer, initialState, compose(applyMiddleware(...middlewares)));\n  const persistor = persistStore(store);\n  sagaMiddleware.run(sagas);\n  return {\n    store,\n    persistor\n  };\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/arit-macmini/Documents/LavinaVyas/Archive/src/redux/store.js"],"names":["createStore","compose","applyMiddleware","persistReducer","persistStore","storage","createSagaMiddleware","reducers","sagas","persistConfig","key","persistedReducer","sagaMiddleware","middlewares","configureStore","initialState","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,QADe;AAEpBL,EAAAA;AAFoB,CAAtB;AAIA,MAAMM,gBAAgB,GAAGR,cAAc,CAACM,aAAD,EAAgBF,QAAhB,CAAvC;AAEA,MAAMK,cAAc,GAAGN,oBAAoB,EAA3C;AAEA,MAAMO,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,MAAME,cAAc,GAAGC,YAAY,IAAI;AACrC,QAAMC,KAAK,GAAGhB,WAAW,CACvBW,gBADuB,EAEvBI,YAFuB,EAGvBd,OAAO,CAACC,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAHgB,CAAzB;AAKA,QAAMI,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA9B;AACAJ,EAAAA,cAAc,CAACM,GAAf,CAAmBV,KAAnB;AAEA,SAAO;AACLQ,IAAAA,KADK;AAELC,IAAAA;AAFK,GAAP;AAKD,CAdD;;AAeA,eAAeH,cAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport sagas from \"./sagas\";\n\nconst persistConfig = {\n  key: \"vaisha\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst configureStore = initialState => {\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    compose(applyMiddleware(...middlewares))\n  );\n  const persistor = persistStore(store);\n  sagaMiddleware.run(sagas);\n\n  return {\n    store,\n    persistor\n  };\n  \n};\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}