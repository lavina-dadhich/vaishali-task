{"ast":null,"code":"import { createActions, createReducer } from 'reduxsauce';\nconst INITIAL_STATE = {\n  data: [],\n  isLoading: false,\n  error: ''\n};\nconst {\n  Types,\n  Creators\n} = createActions({\n  getApiData: null,\n  apiSuccess: ['data'],\n  apiFailure: ['error']\n});\nexport const apiActions = {\n  Types,\n  Creators\n};\n\nconst getApiData = state => {\n  return { ...state,\n    isLoading: true,\n    error: ''\n  };\n};\n\nconst apiSuccess = (state, {\n  data\n}) => {\n  return { ...state,\n    data,\n    isLoading: false,\n    error: ''\n  };\n};\n\nconst apiFailure = (state, error) => {\n  return { ...state,\n    isLoading: false,\n    error: error\n  };\n};\n\nexport const apiReducer = createReducer(INITIAL_STATE, {\n  [Types.GET_API_DATA]: getApiData,\n  [Types.API_SUCCESS]: apiSuccess,\n  [Types.API_FAILURE]: apiFailure\n});","map":{"version":3,"sources":["/Users/arit-macmini/Documents/LavinaVyas/Archive/src/redux/api/reducer.js"],"names":["createActions","createReducer","INITIAL_STATE","data","isLoading","error","Types","Creators","getApiData","apiSuccess","apiFailure","apiActions","state","apiReducer","GET_API_DATA","API_SUCCESS","API_FAILURE"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,SAAS,EAAE,KAFS;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;AAMA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBP,aAAa,CAAC;AACxCQ,EAAAA,UAAU,EAAE,IAD4B;AAExCC,EAAAA,UAAU,EAAE,CAAC,MAAD,CAF4B;AAGxCC,EAAAA,UAAU,EAAE,CAAC,OAAD;AAH4B,CAAD,CAAzC;AAMA,OAAO,MAAMC,UAAU,GAAG;AACxBL,EAAAA,KADwB;AAExBC,EAAAA;AAFwB,CAAnB;;AAIP,MAAMC,UAAU,GAAII,KAAD,IAAW;AAC5B,SAAO,EACL,GAAGA,KADE;AAELR,IAAAA,SAAS,EAAE,IAFN;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAAP;AAKD,CAND;;AAQA,MAAMI,UAAU,GAAG,CAACG,KAAD,EAAQ;AAAET,EAAAA;AAAF,CAAR,KAAqB;AACtC,SAAO,EACL,GAAGS,KADE;AAELT,IAAAA,IAFK;AAGLC,IAAAA,SAAS,EAAE,KAHN;AAILC,IAAAA,KAAK,EAAE;AAJF,GAAP;AAMD,CAPD;;AAQA,MAAMK,UAAU,GAAG,CAACE,KAAD,EAAQP,KAAR,KAAkB;AACnC,SAAO,EACL,GAAGO,KADE;AAELR,IAAAA,SAAS,EAAE,KAFN;AAGLC,IAAAA,KAAK,EAAEA;AAHF,GAAP;AAKD,CAND;;AAQA,OAAO,MAAMQ,UAAU,GAAGZ,aAAa,CAACC,aAAD,EAAgB;AACrD,GAACI,KAAK,CAACQ,YAAP,GAAsBN,UAD+B;AAErD,GAACF,KAAK,CAACS,WAAP,GAAqBN,UAFgC;AAGrD,GAACH,KAAK,CAACU,WAAP,GAAqBN;AAHgC,CAAhB,CAAhC","sourcesContent":["import { createActions, createReducer } from 'reduxsauce';\n\nconst INITIAL_STATE = {\n  data: [],\n  isLoading: false,\n  error: '',\n};\n\nconst { Types, Creators } = createActions({\n  getApiData: null,\n  apiSuccess: ['data'],\n  apiFailure: ['error'],\n});\n\nexport const apiActions = {\n  Types,\n  Creators,\n};\nconst getApiData = (state) => {\n  return {\n    ...state,\n    isLoading: true,\n    error: '',\n  };\n};\n\nconst apiSuccess = (state, { data }) => {\n  return {\n    ...state,\n    data,\n    isLoading: false,\n    error: '',\n  };\n};\nconst apiFailure = (state, error) => {\n  return {\n    ...state,\n    isLoading: false,\n    error: error,\n  };\n};\n\nexport const apiReducer = createReducer(INITIAL_STATE, {\n  [Types.GET_API_DATA]: getApiData,\n  [Types.API_SUCCESS]: apiSuccess,\n  [Types.API_FAILURE]: apiFailure,\n});\n"]},"metadata":{},"sourceType":"module"}